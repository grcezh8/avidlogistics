{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GraceZhou\\\\Documents\\\\AVIDLogistics\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getProfile } from '../features/auth/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const tryLoadUser = async () => {\n      try {\n        const res = await getProfile(); //profile reloads > calls getProfile (if token is valid and in localStorage, backend returns user info)\n        setUser(res.data);\n      } catch {\n        setUser(null);\n      }\n    };\n    tryLoadUser();\n  }, []);\n  const login = userData => setUser(userData);\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getProfile","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","tryLoadUser","res","data","login","userData","logout","localStorage","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/GraceZhou/Documents/AVIDLogistics/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { getProfile } from '../features/auth/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tryLoadUser = async () => {\r\n      try {\r\n        const res = await getProfile(); //profile reloads > calls getProfile (if token is valid and in localStorage, backend returns user info)\r\n        setUser(res.data);\r\n      } catch {\r\n        setUser(null);\r\n      }\r\n    };\r\n    tryLoadUser();\r\n  }, []);\r\n\r\n  const login = (userData) => setUser(userData);\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,UAAU,CAAC,CAAC,CAAC,CAAC;QAChCQ,OAAO,CAACE,GAAG,CAACC,IAAI,CAAC;MACnB,CAAC,CAAC,MAAM;QACNH,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIC,QAAQ,IAAKL,OAAO,CAACK,QAAQ,CAAC;EAC7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCR,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CA1BWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA4BzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACI,WAAW,CAAC;AAAA;AAACsB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}